// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Recipes.Data;

#nullable disable

namespace Recipes.Migrations
{
    [DbContext(typeof(RecipeCatalogContext))]
    [Migration("20250222122150_FixedIngridients")]
    partial class FixedIngridients
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecipeIngredient", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("RecipeIngredientId")
                        .HasColumnType("int");

                    b.HasKey("RecipeId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("RecipeIngredients");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 1,
                            Quantity = 500m,
                            RecipeIngredientId = 0
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 3,
                            Quantity = 300m,
                            RecipeIngredientId = 0
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 2,
                            Quantity = 700m,
                            RecipeIngredientId = 0
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 1,
                            Quantity = 400m,
                            RecipeIngredientId = 0
                        },
                        new
                        {
                            RecipeId = 3,
                            IngredientId = 5,
                            Quantity = 200m,
                            RecipeIngredientId = 0
                        },
                        new
                        {
                            RecipeId = 3,
                            IngredientId = 6,
                            Quantity = 100m,
                            RecipeIngredientId = 0
                        });
                });

            modelBuilder.Entity("Recipes.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Предястие"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Основно"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Десерт"
                        });
                });

            modelBuilder.Entity("Recipes.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredientId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IngredientId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            IngredientId = 1,
                            Name = "Месо"
                        },
                        new
                        {
                            IngredientId = 2,
                            Name = "Картофи"
                        },
                        new
                        {
                            IngredientId = 3,
                            Name = "Зеле"
                        },
                        new
                        {
                            IngredientId = 4,
                            Name = "Чушки"
                        },
                        new
                        {
                            IngredientId = 5,
                            Name = "Краставици"
                        },
                        new
                        {
                            IngredientId = 6,
                            Name = "Сирене"
                        },
                        new
                        {
                            IngredientId = 7,
                            Name = "Чесън"
                        });
                });

            modelBuilder.Entity("Recipes.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CookingTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecipeId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            CategoryId = 2,
                            CookingTime = "4-5 часа",
                            Description = "Задушено зеле с различни видове месо.",
                            ImagePath = "/images/kapama.jpg",
                            Title = "Капама"
                        },
                        new
                        {
                            RecipeId = 2,
                            CategoryId = 2,
                            CookingTime = "1 час",
                            Description = "Традиционно ястие с картофи и кайма.",
                            ImagePath = "/images/musaka.jpg",
                            Title = "Мусака"
                        },
                        new
                        {
                            RecipeId = 3,
                            CategoryId = 1,
                            CookingTime = "10-15 минути",
                            Description = "Домати, краставици, сирене и чушки.",
                            ImagePath = "/images/shopska salata.jpg",
                            Title = "Шопска салата"
                        },
                        new
                        {
                            RecipeId = 4,
                            CategoryId = 2,
                            CookingTime = "1-2 часа",
                            Description = "Ястие от чушки, пълнени с кайма и ориз.",
                            ImagePath = "/images/pulneni.jpg",
                            Title = "Пълнени чушки"
                        },
                        new
                        {
                            RecipeId = 5,
                            CategoryId = 1,
                            CookingTime = "10 минути",
                            Description = "Студена супа от кисело мляко, краставици и чесън.",
                            ImagePath = "/images/tarator.jpg",
                            Title = "Таратор"
                        },
                        new
                        {
                            RecipeId = 6,
                            CategoryId = 3,
                            CookingTime = "3-4 часа",
                            Description = "Доматено-пиперена разядка с патладжан и подправки.",
                            ImagePath = "/images/l.jpg",
                            Title = "Лютеница"
                        },
                        new
                        {
                            RecipeId = 7,
                            CategoryId = 2,
                            CookingTime = "1-2 часа",
                            Description = "Ястие от месо, лук и чушки.",
                            ImagePath = "/images/kavurma.jpg",
                            Title = "Кавърма"
                        },
                        new
                        {
                            RecipeId = 8,
                            CategoryId = 2,
                            CookingTime = "2-3 часа",
                            Description = "Зелеви или лозови листа с плънка.",
                            ImagePath = "/images/sarmi.jpg",
                            Title = "Сарми"
                        },
                        new
                        {
                            RecipeId = 9,
                            CategoryId = 3,
                            CookingTime = "1-2 часа",
                            Description = "Традиционно тестено изделие със сирене.",
                            ImagePath = "/images/banica.jpg",
                            Title = "Баница"
                        });
                });

            modelBuilder.Entity("RecipeIngredient", b =>
                {
                    b.HasOne("Recipes.Models.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Recipes.Models.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Recipes.Models.Recipe", b =>
                {
                    b.HasOne("Recipes.Models.Category", "Category")
                        .WithMany("Recipes")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Recipes.Models.Category", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("Recipes.Models.Ingredient", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("Recipes.Models.Recipe", b =>
                {
                    b.Navigation("RecipeIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
